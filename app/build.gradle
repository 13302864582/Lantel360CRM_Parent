apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.mob.sdk'

android {
   /* signingConfigs {
        config {
            keyAlias 'lantel2019'
            keyPassword 'lantel2019'
            storeFile file('C:/Users/fz/Documents/GitHub/Lantel360CRM_Parent/360parentKey.jks')
            storePassword 'lantel2019'
        }
    }*/
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.lantel.lh01.test"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        // Enabling multidex support.
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }

        ndk {
            abiFilters "armeabi-v7a"
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "a848866a9373f83f6ebebf73", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    // 签名配置
    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'lantel2019'
            storeFile file('C:/Users/fz/Documents/GitHub/Lantel360CRM_Parent/360parentKey.jks')
            storePassword 'lantel2019'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    if (rootProject.ext.isMoudle) {
        implementation project(':common')
    } else {
        implementation project(':homelibrary')
    }
    annotationProcessor rootProject.ext.dependencies.glideCompiler
    annotationProcessor rootProject.ext.dependencies.butterknifecompiler
    annotationProcessor rootProject.ext.dependencies.arouterCompiler
    implementation rootProject.ext.dependencies.banner
    implementation rootProject.ext.dependencies.zxing
    implementation rootProject.ext.dependencies.convenientbanner
    implementation rootProject.ext.dependencies.noticeview
}
